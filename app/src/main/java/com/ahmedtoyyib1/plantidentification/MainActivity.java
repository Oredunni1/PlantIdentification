package com.ahmedtoyyib1.plantidentification;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.CheckBox;import android.widget.Switch;public class MainActivity extends AppCompatActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);    }    public boolean onCheckboxClicked(View view){        //is the view now checked        boolean checked = ((CheckBox) view).isChecked();        Features features = new Features();        //checking the checkbox that is clicked        switch(view.getId()){            case R.id.checkbox_spines:                if (checked){                    features.spines = true;                    Log.d("Spine", "Am clicked");                } else{                    Log.d("Spine", "Am not clicked");                }                break;            case R.id.chekbox_latex:                if (checked)                    features.latex = true;                    Log.d("latex", "Am clicked");                break;            case R.id.chekbox_simpleLeaves:                if (checked)                    features.simpleLeaves = true;                    Log.d("simpleLeave", "Am clicked");                break;            case R.id.chekbox_compundleaves:                if (checked)                    features.compoundLeaves = true;                    Log.d("compundLeaves", "Am clicked");                break;            case R.id.chekbox_pinnateLeaves:                if (checked)                    features.pinnateLeaves = true;                    Log.d("pinnateLeaves", "Am clicked");                break;            case R.id.chekbox_oppositeSimpleLeaves:                if (checked)                    features.oppositeSimpleLeaves = true;                    Log.d("oppositeSimple", "Am clicked");                break;            case R.id.chekbox_oppositeCompoundLeaves:                if (checked)                    features.oppositeCompoundLeaves = true;                Log.d("oppositeSimple", "Am clicked");                break;            case R.id.chekbox_otherExudate:                if (checked)                    features.otherExudate = true;                    Log.d("otherExudate", "Am clicked");                break;            case R.id.chekbox_leafBlade:                if (checked)                    features.leafBladeEntirel = true;                    Log.d("leafBlade", "Am clicked");                break;            case R.id.chekbox_longStalk:                if (checked)                    features.longStalk = true;                    Log.d("longStalk", "Am clicked");                break;            case R.id.chekbox_palmatelyNerved:                if (checked)                    features.palmatelyNerved = true;                    Log.d("palmatelyNerved", "Am clicked");                break;            case R.id.chekbox_leafBladeDivide:                if (checked)                    features.leafBladeDivided = true;                    Log.d("leafBladeDIvide", "Am clicked");                break;        }        return checked;    }    public void onClick(View view){        Piliostigma piliostigma = new Piliostigma();        piliostigma.pilioFeatures();        if (Piliostigma.pilioFeatures()){            Log.d("piliostigma", "it is pilio");        }    }}